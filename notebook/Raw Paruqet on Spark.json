{
	"name": "Raw Paruqet on Spark",
	"properties": {
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://wwi-02@asadatalake0413.dfs.core.windows.net/sale-small/Year=2010/Quarter=Q4/Month=12/Day=20101231/sale-small-20101231-snappy.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"from pyspark.sql import SparkSession\n",
					"from pyspark.sql.types import *\n",
					"from pyspark.sql.functions import *\n",
					"\n",
					"profitByDateProduct = (df.groupBy(\"TransactionDate\", \"ProductId\")\n",
					".agg(\n",
					"round(sum(\"ProfitAmount\"),2).alias(\"(sum)Profit\"),\n",
					"round(avg(\"ProfitAmount\"),2).alias(\"(avg)Profit\"),\n",
					"sum(\"Quantity\").alias(\"(sum)Quantity\")\n",
					").orderBy(\"TransactionDate\", \"ProductId\")\n",
					")\n",
					"profitByDateProduct.show(100)"
				],
				"execution_count": null
			}
		]
	}
}