{
	"name": "NTCTaxi Data road",
	"properties": {
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_spark",
				"display_name": "scala"
			},
			"language_info": {
				"name": "scala"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%%spark\n",
					"//SQL분석 함수 통해 SQLPool01 데이터 조회(scala로만 불러오기 가능)\n",
					"val scaladf = spark.read.sqlanalytics(\"SQLPool01.dbo.Trip\") \n",
					"//세션내부에서 사용가능하도록 temp table 생성\n",
					"scaladf.createOrReplaceTempView(\"nycTaxi\")"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"dfPy = spark.sql(\"SELECT * FROM nycTaxi\") "
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"spark.sql(\"CREATE DATABASE IF NOT EXISTS nyctaxi\")\n",
					"dfPy.write.mode(\"overwrite\").saveAsTable(\"nyctaxi.trip\")"
				],
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"inputCollapsed": true,
					"diagram": {
						"activateDiagramType": 1,
						"chartConfig": {
							"category": "bar",
							"keys": [
								"SumTripDistance"
							],
							"values": [
								"PassengerCount"
							],
							"yLabel": "PassengerCount",
							"xLabel": "SumTripDistance",
							"aggregation": "SUM",
							"aggByBackend": false
						},
						"aggData": "{\"PassengerCount\":{\"12544348.589990655\":1,\"13091570.279999683\":3,\"172174.32999999798\":4,\"2635668.6600008374\":2,\"296384.39000000234\":6,\"3.6\":8,\"484437.6800000045\":5}}",
						"isSummary": false,
						"previewData": {
							"filter": null
						},
						"isSql": true
					}
				},
				"source": [
					"%%sql \n",
					"SELECT PassengerCount,\n",
					"    SUM(TripDistanceMiles) as SumTripDistance,\n",
					"    AVG(TripDistanceMiles) as AvgTripDistance\n",
					"FROM nyctaxi.trip\n",
					"WHERE TripDistanceMiles > 0 AND PassengerCount > 0\n",
					"GROUP BY PassengerCount\n",
					"ORDER BY PassengerCount"
				],
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"df = spark.sql(\"\"\"\n",
					"   SELECT PassengerCount,\n",
					"       SUM(TripDistanceMiles) as SumTripDistance,\n",
					"       AVG(TripDistanceMiles) as AvgTripDistance\n",
					"   FROM nyctaxi.trip\n",
					"   WHERE TripDistanceMiles > 0 AND PassengerCount > 0\n",
					"   GROUP BY PassengerCount\n",
					"   ORDER BY PassengerCount\n",
					"\"\"\") \n",
					"#display(df)\n",
					"df.write.saveAsTable(\"nyctaxi.passengercountstats\")"
				],
				"execution_count": 16
			}
		]
	}
}